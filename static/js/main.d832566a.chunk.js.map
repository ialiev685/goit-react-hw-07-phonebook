{"version":3,"sources":["redux/phonebook/contacts-action.js","services/ApiContacts.js","redux/phonebook/contacts-operations.js","redux/phonebook/contacts-reducer.js","redux/store.js","redux/phonebook/contacts-selector.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.jsx","components/Section/Section.jsx","components/Filter/Filter.jsx","components/App.js","index.js"],"names":["getFilterItems","createAction","API","require","create","baseURL","fetchContacts","a","get","fetchCreateContact","item","post","fetchDeleteContact","id","delete","createAsyncThunk","_","rejectWithValue","contacts","data","message","statusText","items","createReducer","fulfilled","state","action","payload","filter","isLoader","pending","rejected","error","actions","combineReducers","store","configureStore","reducer","devTools","process","getFilter","getIsLoader","getError","getFilterContacts","createSelector","normalizedFilter","toLowerCase","name","includes","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","checkDoubleName","newContact","normalizedName","some","handleChange","e","target","value","onSubmit","preventDefault","newItem","alert","contact","uuidv4","addContact","className","type","pattern","title","required","onChange","autoComplete","ContactItem","onClick","ContactsList","loading","useEffect","map","Section","children","Filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4VAUaA,EAAiBC,YAAa,sB,uBCRrCC,EAFQC,EAAQ,IAEJC,OAAO,CACvBC,QAAS,0BAGEC,EAAa,uCAAG,sBAAAC,EAAA,sEACdL,EAAIM,IAAI,aADM,mFAAH,qDAIbC,EAAkB,uCAAG,WAAOC,GAAP,SAAAH,EAAA,sEACnBL,EAAIS,KAAK,YAAaD,GADH,mFAAH,sDAIlBE,EAAkB,uCAAG,WAAOC,GAAP,SAAAN,EAAA,sEACnBL,EAAIY,OAAJ,oBAAwBD,IADL,mFAAH,sDCFlBP,EAAgBS,YAC3B,yBAD2C,uCAE3C,WAAOC,EAAP,oBAAAT,EAAA,6DAAYU,EAAZ,EAAYA,gBAAZ,kBAE2Bf,IAF3B,cAEUgB,EAFV,yBAIWA,EAASC,MAJpB,yDAMWF,EAAgB,KAAIG,UAN/B,yDAF2C,yDAwBhCX,EAAqBM,YAChC,8BADgD,uCAEhD,WAAOL,EAAP,oBAAAH,EAAA,6DAAeU,EAAf,EAAeA,gBAAf,kBAE2Bf,EAAuBQ,GAFlD,cAEUQ,EAFV,yBAIWA,EAASC,MAJpB,yDAMWF,EAAgB,KAAIG,UAN/B,yDAFgD,yDAsBrCR,EAAqBG,YAChC,8BADgD,uCAEhD,WAAOF,EAAP,kBAAAN,EAAA,6DAAaU,EAAb,EAAaA,gBAAb,kBAEgCf,EAAuBW,GAFvD,UAGqC,OAHrC,OAGsBQ,WAHtB,yCAIaR,GAJb,gFAOWI,EAAgB,KAAIG,UAP/B,yDAFgD,yDC3C5CE,EAAQC,YAAc,IAAD,mBACxBjB,EAAckB,WAAY,SAACC,EAAOC,GAAR,4BAAuBA,EAAOC,SAA9B,YAA0CF,OAD5C,cAExBhB,EAAmBe,WAAY,SAACC,EAAOC,GAAR,OAAoBA,EAAOC,SAA3B,mBAAuCF,OAF9C,cAGxBb,EAAmBY,WAAY,SAACC,EAAOC,GAAR,OAC9BD,EAAMG,QAAO,qBAAGf,KAAgBa,EAAOC,cAJhB,IAOrBE,EAAWN,aAAc,GAAD,mBAC3BX,EAAmBkB,SAAU,kBAAM,KADR,cAE3BxB,EAAcwB,SAAU,kBAAM,KAFH,cAG3BrB,EAAmBqB,SAAU,kBAAM,KAHR,cAI3BlB,EAAmBY,WAAY,kBAAM,KAJV,cAK3BlB,EAAckB,WAAY,kBAAM,KALL,cAM3Bf,EAAmBe,WAAY,kBAAM,KANV,cAO3BZ,EAAmBmB,UAAW,kBAAM,KAPT,cAQ3BzB,EAAcyB,UAAW,kBAAM,KARJ,cAS3BtB,EAAmBsB,UAAW,kBAAM,KATT,IAYxBC,EAAQT,YAAc,MAAD,mBACxBX,EAAmBmB,UAAW,SAACf,EAAGU,GAAJ,OAAeA,EAAOC,WAD5B,cAExBf,EAAmBkB,SAAU,kBAAM,QAFX,cAGxBxB,EAAcyB,UAAW,SAACf,EAAGU,GAAJ,OAAeA,EAAOC,WAHvB,cAIxBrB,EAAcwB,SAAU,kBAAM,QAJN,cAKxBrB,EAAmBsB,UAAW,SAACf,EAAGU,GAAJ,OAAeA,EAAOC,WAL5B,cAMxBlB,EAAmBqB,SAAU,kBAAM,QANX,IASrBF,EAASL,YAAc,GAAD,eACzBU,GAAyB,SAACjB,EAAGU,GAAJ,OAAeA,EAAOC,YAGnCO,cAAgB,CAC7BZ,QACAM,SACAC,WACAG,UC9CWG,EAAQC,YAAe,CAClCC,QAAS,CACPnB,SAAUA,GAGZoB,UAAUC,I,uCCPCC,EAAY,SAACf,GAAD,OAAWA,EAAMP,SAASU,QACtCa,EAAc,SAAChB,GAAD,OAAWA,EAAMP,SAASW,UACxCa,EAAW,SAACjB,GAAD,OAAWA,EAAMP,SAASc,OAYrCW,EAAoBC,YAC/B,CAhBe,SAACnB,GAAD,OAAWA,EAAMP,SAASI,OAgB9BkB,IACX,SAAClB,EAAOM,GACN,IAAMiB,EAAmBjB,EAAOkB,cAEhC,OAAOxB,EAAMM,QAAO,qBAAGmB,KAChBD,cAAcE,SAASH,S,eCqEnBI,EArFK,WAClB,MAAwBC,mBAAS,IAAjC,mBAAOH,EAAP,KAAaI,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOE,EAAP,KAAeC,EAAf,KAEM/B,EAAQgC,YAAYX,GACpBY,EAAWC,cAYXC,EAAkB,SAACC,GACvB,IACMC,EADWD,EAATX,KACoBD,cAE5B,OAAOxB,EAAMsC,MAAK,qBAAGb,KAAgBD,gBAAkBa,MAGnDE,EAAe,SAACC,GACpB,IAAMf,EAAOe,EAAEC,OAAOhB,KAChBiB,EAAQF,EAAEC,OAAOC,MAEvB,OAAQjB,GACN,IAAK,OACHI,EAAQa,GACR,MACF,IAAK,SACHX,EAAUW,GACV,MACF,QACE,SAYN,OACE,uBAAMC,SATa,SAACH,GACpBA,EAAEI,iBAlCe,SAACC,GAClB,GAAIV,EAAgBU,GAElB,OADAC,MAAM,GAAD,OAAID,EAAQpB,KAAZ,iHACE,EAGT,IAAMsB,EAAO,aAAKxD,GAAIyD,eAAaH,GACnCZ,EAAS9C,EAAmB4D,IA6B5BE,CAAW,CAAExB,OAAMK,WACnBD,EAAQ,IACRE,EAAU,KAIoBmB,UAAU,gBAAxC,UACE,wBAAOA,UAAU,uBAAjB,kBAEE,uBACEA,UAAU,sBACVC,KAAK,OACL1B,KAAK,OACL2B,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUhB,EACVG,MAAOjB,EACP+B,aAAa,WAGjB,wBAAON,UAAU,uBAAjB,oBAEE,uBACEA,UAAU,sBACVC,KAAK,MACL1B,KAAK,SACL2B,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUhB,EACVG,MAAOZ,EACP0B,aAAa,WAGjB,wBAAQL,KAAK,SAASD,UAAU,wBAAhC,6BC1DSO,G,MAtBK,SAAC,GAA0B,IAAxBhC,EAAuB,EAAvBA,KAAMK,EAAiB,EAAjBA,OAAQvC,EAAS,EAATA,GAC7B0C,EAAWC,cAEjB,OACE,qBAAIgB,UAAU,sBAAd,UACE,iCACGzB,EADH,KACWK,KAEX,uBACEoB,UAAU,wBACVC,KAAK,SACLT,MAAM,SACNgB,QAAS,kBAAMzB,EAAS3C,EAAmBC,YCapCoE,G,MAvBM,WACnB,IAAM3D,EAAQgC,YAAYX,GACpBuC,EAAU5B,YAAYb,GACtBT,EAAQsB,YAAYZ,GACpBa,EAAWC,cAMjB,OAJA2B,qBAAU,WACR5B,EAASjD,OACR,CAACiD,IAGF,sBAAKiB,UAAU,mBAAf,UACGU,GAAW,mBAAGV,UAAU,2BAAb,wBACXxC,GAAS,mBAAGwC,UAAU,0BAAb,SAAwCxC,IAClD,oBAAIwC,UAAU,kCAAd,SACGlD,EAAM8D,KAAI,gBAAGvE,EAAH,EAAGA,GAAIkC,EAAP,EAAOA,KAAMK,EAAb,EAAaA,OAAb,OACT,cAAC,EAAD,CAAsBL,KAAMA,EAAMK,OAAQA,EAAQvC,GAAIA,GAApCA,aCjBbwE,G,MAJC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjB,OAAO,yBAASd,UAAU,UAAnB,SAA8Bc,MCsBxBC,G,MApBA,WACb,IAAM3D,EAAS0B,YAAYd,GACrBe,EAAWC,cAIjB,OACE,wBAAOgB,UAAU,eAAjB,4CAEE,uBACEA,UAAU,qBACVC,KAAK,OACLT,MAAOpC,EACPmB,KAAK,SACL8B,SAVe,SAACf,GAAD,OAAOP,EAASvD,EAAe8D,EAAEC,OAAOC,gBCYhDwB,G,MAdH,WACV,OACE,eAAC,EAAD,WACE,oBAAIhB,UAAU,UAAd,uBACA,cAAC,EAAD,IAEA,oBAAIA,UAAU,QAAd,sBACA,cAAC,EAAD,IAEA,cAAC,EAAD,SCTNiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUxD,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJyD,SAASC,eAAe,W","file":"static/js/main.d832566a.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\n// export const fetchRequest = createAction(\"contacts/request\");\n\n// export const fetchSuccess = createAction(\"contacts/success\");\n\n// export const fetchError = createAction(\"contacts/error\");\n\n// export const deleteItem = createAction(\"contacts/delete\");\n\nexport const getFilterItems = createAction(\"contacts/getFilter\");\n","const axios = require(\"axios\");\n\nconst API = axios.create({\n  baseURL: \"http://localhost:3001\",\n});\n\nexport const fetchContacts = async () => {\n  return await API.get(\"/contacts\");\n};\n\nexport const fetchCreateContact = async (item) => {\n  return await API.post(\"/contacts\", item);\n};\n\nexport const fetchDeleteContact = async (id) => {\n  return await API.delete(`/contacts/${id}`);\n};\n","// import * as actions from \"./contacts-action\";\nimport * as API from \"../../services/ApiContacts\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// export const fetchContacts = () => async (dispatch) => {\n//   dispatch(actions.fetchRequest());\n\n//   const contacts = await API.fetchContacts();\n\n//   dispatch(actions.fetchSuccess(contacts.data));\n// };\n\nexport const fetchContacts = createAsyncThunk(\n  \"contacts/fetchContacts\",\n  async (_, { rejectWithValue }) => {\n    try {\n      const contacts = await API.fetchContacts();\n\n      return contacts.data;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\n// export const fetchCreateContact = (item) => async (dispatch) => {\n//   dispatch(actions.fetchRequest());\n//   try {\n//     const contacts = await API.fetchCreateContact(item);\n\n//     dispatch(actions.fetchSuccess([contacts.data]));\n//   } catch (err) {\n//     dispatch(actions.fetchError(err));\n//   }\n// };\n\nexport const fetchCreateContact = createAsyncThunk(\n  \"contacts/fetchCreateContact\",\n  async (item, { rejectWithValue }) => {\n    try {\n      const contacts = await API.fetchCreateContact(item);\n\n      return contacts.data;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\n// export const fetchDeleteContact = (id) => async (dispatch) => {\n//   dispatch(actions.fetchRequest());\n\n//   const requestDelete = await API.fetchDeleteContact(id);\n//   if (requestDelete.statusText === \"OK\") {\n//     dispatch(actions.deleteItem(id));\n//   }\n// };\n\nexport const fetchDeleteContact = createAsyncThunk(\n  \"contacts/fetchDeleteContact\",\n  async (id, { rejectWithValue }) => {\n    try {\n      const requestDelete = await API.fetchDeleteContact(id);\n      if (requestDelete.statusText === \"OK\") {\n        return id;\n      }\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport * as actions from \"./contacts-action\";\nimport {\n  fetchContacts,\n  fetchCreateContact,\n  fetchDeleteContact,\n} from \"./contacts-operations\";\n\n// const items = createReducer([], {\n//   [actions.fetchSuccess]: (state, action) => [...action.payload, ...state],\n//   [actions.deleteItem]: (state, action) =>\n//     state.filter(({ id }) => id !== action.payload),\n// });\n\nconst items = createReducer([], {\n  [fetchContacts.fulfilled]: (state, action) => [...action.payload, ...state],\n  [fetchCreateContact.fulfilled]: (state, action) => [action.payload, ...state],\n  [fetchDeleteContact.fulfilled]: (state, action) =>\n    state.filter(({ id }) => id !== action.payload),\n});\n\nconst isLoader = createReducer(false, {\n  [fetchDeleteContact.pending]: () => true,\n  [fetchContacts.pending]: () => true,\n  [fetchCreateContact.pending]: () => true,\n  [fetchDeleteContact.fulfilled]: () => false,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchCreateContact.fulfilled]: () => false,\n  [fetchDeleteContact.rejected]: () => false,\n  [fetchContacts.rejected]: () => false,\n  [fetchCreateContact.rejected]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchDeleteContact.rejected]: (_, action) => action.payload,\n  [fetchDeleteContact.pending]: () => null,\n  [fetchContacts.rejected]: (_, action) => action.payload,\n  [fetchContacts.pending]: () => null,\n  [fetchCreateContact.rejected]: (_, action) => action.payload,\n  [fetchCreateContact.pending]: () => null,\n});\n\nconst filter = createReducer(\"\", {\n  [actions.getFilterItems]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  isLoader,\n  error,\n});\n","// import { createStore, combineReducers } from \"redux\";\n\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport contacts from \"./phonebook/contacts-reducer\";\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contacts,\n  },\n\n  devTools: process.env.NODE_ENV === \"development\",\n});\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getItems = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\nexport const getIsLoader = (state) => state.contacts.isLoader;\nexport const getError = (state) => state.contacts.error;\n\n// export const getFilterContacts = (state) => {\n//   const items = getItems(state);\n//   const filter = getFilter(state);\n//   const normalizedFilter = filter.toLowerCase();\n\n//   return items.filter(({ name }) =>\n//     name.toLowerCase().includes(normalizedFilter)\n//   );\n// };\n\nexport const getFilterContacts = createSelector(\n  [getItems, getFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import { useState } from \"react\";\nimport \"./ContactForm.scss\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFilterContacts, fetchCreateContact } from \"redux/phonebook\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst ContactForm = () => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const items = useSelector(getFilterContacts);\n  const dispatch = useDispatch();\n\n  const addContact = (newItem) => {\n    if (checkDoubleName(newItem)) {\n      alert(`${newItem.name} уже есть в контактах.`);\n      return false;\n    }\n\n    const contact = { id: uuidv4(), ...newItem };\n    dispatch(fetchCreateContact(contact));\n  };\n\n  const checkDoubleName = (newContact) => {\n    const { name } = newContact;\n    const normalizedName = name.toLowerCase();\n\n    return items.some(({ name }) => name.toLowerCase() === normalizedName);\n  };\n\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    addContact({ name, number });\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form-contacts\">\n      <label className=\"form-contacts__input\">\n        Name:\n        <input\n          className=\"form-contacts__text\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n          value={name}\n          autoComplete=\"off\"\n        />\n      </label>\n      <label className=\"form-contacts__input\">\n        Number:\n        <input\n          className=\"form-contacts__text\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n          value={number}\n          autoComplete=\"off\"\n        />\n      </label>\n      <button type=\"submit\" className=\"form-contacts__button\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import \"./ContactItem.scss\";\nimport { useDispatch } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { fetchDeleteContact } from \"redux/phonebook/contacts-operations\";\n\nconst ContactItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <li className=\"contacts-list__item\">\n      <span>\n        {name}: {number}\n      </span>\n      <input\n        className=\"contacts-list__button\"\n        type=\"button\"\n        value=\"delete\"\n        onClick={() => dispatch(fetchDeleteContact(id))}\n      />\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import ContactItem from \"../ContactItem\";\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getError } from \"redux/phonebook\";\nimport { getIsLoader, getFilterContacts, fetchContacts } from \"redux/phonebook\";\nimport \"./ContactsList.scss\";\n\nconst ContactsList = () => {\n  const items = useSelector(getFilterContacts);\n  const loading = useSelector(getIsLoader);\n  const error = useSelector(getError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className=\"contacts-wrapper\">\n      {loading && <p className=\"contacts-wrapper__loader\">loading...</p>}\n      {error && <p className=\"contacts-wrapper__error\">{error}</p>}\n      <ul className=\"contacts-wrapper__contacts-list\">\n        {items.map(({ id, name, number }) => (\n          <ContactItem key={id} name={name} number={number} id={id} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactsList;\n","import \"./Section.scss\";\n\nconst Section = ({ children }) => {\n  return <section className=\"section\">{children}</section>;\n};\n\nexport default Section;\n","import \"./Filter.scss\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFilter, getFilterItems } from \"redux/phonebook\";\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = (e) => dispatch(getFilterItems(e.target.value));\n\n  return (\n    <label className=\"filter-input\">\n      Поиск:\n      <input\n        className=\"filter-input__text\"\n        type=\"text\"\n        value={filter}\n        name=\"filter\"\n        onChange={changeFilter}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\nimport ContactForm from \"./ContactForm\";\nimport ContactsList from \"./ContactsList\";\nimport Section from \"./Section\";\nimport Filter from \"./Filter\";\nimport \"./App.scss\";\n\nconst App = () => {\n  return (\n    <Section>\n      <h1 className=\"caption\">Phonebook</h1>\n      <ContactForm />\n\n      <h2 className=\"title\">Contacts</h2>\n      <Filter />\n\n      <ContactsList />\n    </Section>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { store } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}